#!/bin/bash
# generate_colors.sh

# Define the input CSS file and the output Hyprland config file
IN_FILE="$HOME/system_colors.css"
OUT_FILE="$HOME/.config/hypr/colors.conf"

# Add a header to the generated file
echo "# This file is auto-generated from $IN_FILE" > "$OUT_FILE"
echo "# DO NOT EDIT THIS FILE MANUALLY." >> "$OUT_FILE"
echo "" >> "$OUT_FILE"

# Use awk to parse the CSS and convert colors
awk '
# Match lines starting with @define-color
/^\s*@define-color/ {
    # Get the variable name (field 2)
    var_name = $2

    # Rebuild the full value string (from field 3 to the end)
    value = ""
    for (i=3; i<=NF; i++) {
        value = (value ? value " " : "") $i
    }
    # Remove trailing semicolon
    sub(/;\s*$/, "", value)

    # --- Color Conversion Logic ---

    # Case 1: Simple hex #RRGGBB
    if (value ~ /^#[0-9a-fA-F]{6}$/) {
        # Hyprland wants rgba(RRGGBBFF)
        sub(/^#/, "", value)
        printf "$%s = rgba(%sFF)\n", var_name, value
    }

    # Case 2: rgba(r, g, b, a)
    else if (match(value, /rgba\(([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9.]+)\)/, m)) {
        r = m[1]; g = m[2]; b = m[3]; a = m[4]
        # Convert decimal r,g,b to hex
        rgb_hex = sprintf("%02X%02X%02X", r, g, b)
        # Convert float alpha (0.0-1.0) to hex (00-FF)
        a_hex = sprintf("%02X", int(a * 255 + 0.5)) # +0.5 for rounding
        
        printf "$%s = rgba(%s%s)\n", var_name, rgb_hex, a_hex
    }

    # Case 3: alpha(#RRGGBB, A)
    else if (match(value, /alpha\((#[0-9a-fA-F]{6})\s*,\s*([0-9.]+)\)/, m)) {
        rgb_hex = m[1]
        a = m[2]
        # Remove # from hex string
        sub(/^#/, "", rgb_hex)
        # Convert float alpha (0.0-1.0) to hex (00-FF)
        a_hex = sprintf("%02X", int(a * 255 + 0.5)) # +0.5 for rounding
        
        printf "$%s = rgba(%s%s)\n", var_name, rgb_hex, a_hex
    }
}
' "$IN_FILE" >> "$OUT_FILE"

echo "Hyprland colors generated at $OUT_FILE"
